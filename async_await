sync/await es una función de JavaScript que se utiliza para manejar código asíncrono de una manera más legible y estructurada.

La palabra clave async se utiliza para definir una función como asíncrona, lo que significa que la función devolverá una Promise. Dentro de una función async, se puede utilizar la palabra clave await para esperar la resolución de una Promise antes de continuar con el siguiente bloque de código.

Ejemplo funcio async:

async function getDatos() {
	try {
		const response = await fetch("https://jsonplaceholder.typicode.com/posts");
		const data = await response.json();
		console.log(data);
	} catch (error) {
		console.log(error);
	}
}

getDatos();

En este ejemplo, la función getDatos es una función asíncrona que utiliza await para esperar la respuesta de la API. La función fetch devuelve una Promise que resuelve en un objeto Response. Para obtener los datos de la respuesta, se utiliza await para esperar a que la respuesta se resuelva y luego se utiliza el método json para obtener los datos en formato JSON.

El bloque try/catch se utiliza para capturar cualquier error que pueda ocurrir durante la llamada a la API. Si se produce un error, se muestra el error en la consola.

Por último, se llama a la función getDatos para obtener los datos de la API y mostrarlos en la consola.

